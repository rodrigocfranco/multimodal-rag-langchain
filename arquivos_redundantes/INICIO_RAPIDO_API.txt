╔═══════════════════════════════════════════════════════════════════════════╗
║                                                                           ║
║           🌐 API REST - Integração com n8n                               ║
║                                                                           ║
╚═══════════════════════════════════════════════════════════════════════════╝

✅ API CRIADA E PRONTA PARA N8N!

═══════════════════════════════════════════════════════════════════════════
    🚀 3 PASSOS PARA COMEÇAR
═══════════════════════════════════════════════════════════════════════════

1️⃣  INSTALAR FLASK
────────────────────────
cd /Users/rcfranco/multimodal-rag-langchain
source venv/bin/activate
pip install flask flask-cors


2️⃣  PROCESSAR UM PDF (se ainda não fez)
────────────────────────
python processar_e_salvar.py "Manejo da terapia antidiabética no DM2.pdf"

# Aguardar 5-10 minutos (UMA VEZ)


3️⃣  INICIAR API
────────────────────────
python api_rest.py

# Servidor em: http://localhost:5000
# Deixar rodando!

═══════════════════════════════════════════════════════════════════════════
    🌐 USAR NO N8N
═══════════════════════════════════════════════════════════════════════════

No n8n, criar HTTP Request Node:

┌─────────────────────────────────────────┐
│ HTTP Request Node                        │
├─────────────────────────────────────────┤
│ Method: POST                             │
│ URL: http://localhost:5000/query-simple │
│                                          │
│ Body (JSON):                             │
│ {                                        │
│   "vectorstore": "attention",           │
│   "question": "{{$json.question}}"      │
│ }                                        │
│                                          │
│ Response: {{$json.answer}}              │
└─────────────────────────────────────────┘

═══════════════════════════════════════════════════════════════════════════
    📝 EXEMPLO DE REQUEST
═══════════════════════════════════════════════════════════════════════════

REQUEST:
POST http://localhost:5000/query-simple
Content-Type: application/json

{
  "vectorstore": "Manejo_da_terapia_antidiabética_no_DM2",
  "question": "Quais são as classes de antidiabéticos?"
}

RESPONSE:
{
  "answer": "As principais classes de antidiabéticos mencionados são: metformina, sulfoniluréias, inibidores DPP-4, agonistas GLP-1, inibidores SGLT2..."
}

═══════════════════════════════════════════════════════════════════════════
    🧪 TESTAR COM CURL
═══════════════════════════════════════════════════════════════════════════

# Health check
curl http://localhost:5000/health

# Listar vectorstores
curl http://localhost:5000/vectorstores

# Fazer pergunta
curl -X POST http://localhost:5000/query-simple \
  -H "Content-Type: application/json" \
  -d '{
    "vectorstore": "attention",
    "question": "What is the attention mechanism?"
  }'

# Ou usar script de teste:
./TESTAR_API.sh

═══════════════════════════════════════════════════════════════════════════
    💡 DICAS PARA N8N
═══════════════════════════════════════════════════════════════════════════

1. Use /query-simple para respostas diretas
2. Use /query para obter fontes e metadados
3. Configure timeout de 30-60 segundos
4. Cache a lista de vectorstores disponíveis
5. Trate erros 404 (vectorstore não encontrado)

═══════════════════════════════════════════════════════════════════════════
    ✅ PRONTO PARA PRODUÇÃO!
═══════════════════════════════════════════════════════════════════════════

API REST completa com:
  ✅ 5 endpoints funcionais
  ✅ CORS habilitado
  ✅ Cache de vectorstores
  ✅ Tratamento de erros
  ✅ Compatível com n8n
  ✅ Suporta múltiplas conexões

Documentação completa em: INTEGRACAO_N8N.md

═══════════════════════════════════════════════════════════════════════════

