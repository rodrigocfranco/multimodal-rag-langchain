╔═══════════════════════════════════════════════════════════════════════════╗
║                                                                           ║
║              🎉 PROJETO SIMPLIFICADO - 2 Scripts Apenas                  ║
║                                                                           ║
╚═══════════════════════════════════════════════════════════════════════════╝

✅ TUDO QUE VOCÊ PRECISA:

═══════════════════════════════════════════════════════════════════════════
    📁 ARQUIVOS FINAIS (apenas 5!)
═══════════════════════════════════════════════════════════════════════════

1. adicionar_pdf.py        → Adicionar PDF ao knowledge base
2. consultar.py            → Consultar (terminal OU API para n8n)
3. test_installation.py    → Testar instalação
4. README.md               → Este guia
5. requirements.txt        → Dependências

═══════════════════════════════════════════════════════════════════════════
    🚀 USO (3 comandos)
═══════════════════════════════════════════════════════════════════════════

cd /Users/rcfranco/multimodal-rag-langchain
source venv/bin/activate

# 1. Adicionar PDF
python adicionar_pdf.py "Manejo da terapia antidiabética no DM2.pdf"

# 2. Adicionar outro PDF (opcional)
python adicionar_pdf.py "attention.pdf"

# 3. Consultar
python consultar.py

# Fazer perguntas!
🤔 Pergunta: Quais são as classes de antidiabéticos?
🤖 Resposta: [busca em TODOS os PDFs automaticamente]
📄 Fonte: [mostra de qual PDF veio]

═══════════════════════════════════════════════════════════════════════════
    🌐 PARA N8N (API)
═══════════════════════════════════════════════════════════════════════════

# Iniciar API
python consultar.py --api

# Usar no n8n:
POST http://localhost:5000/query
{"question": "sua pergunta"}

Resposta:
{"answer": "resposta", "sources": ["pdf1.pdf"]}

═══════════════════════════════════════════════════════════════════════════
    ✅ CARACTERÍSTICAS
═══════════════════════════════════════════════════════════════════════════

✓ Knowledge base UNIFICADO (busca em todos os PDFs)
✓ Metadados automáticos (source, type, index)
✓ Vector store persistente (não reprocessa)
✓ Chunking otimizado (28 chunks vs 678)
✓ Detecta tabelas embutidas (6 tabelas)
✓ Valida imagens (sem erro 400)
✓ Chat terminal OU API REST
✓ Rastreabilidade (mostra fonte)

═══════════════════════════════════════════════════════════════════════════
    📦 ARQUIVOS ORGANIZADOS
═══════════════════════════════════════════════════════════════════════════

arquivos_redundantes/ (40+ arquivos)
  → Versões antigas, sistemas alternativos, docs detalhadas
  → Mantidos para referência mas não necessários

arquivos_antigos/ (20 arquivos)
  → Scripts originais do projeto
  → Backup histórico

═══════════════════════════════════════════════════════════════════════════
    🎯 TUDO EM 2 SCRIPTS!
═══════════════════════════════════════════════════════════════════════════

adicionar_pdf.py:
  • Processa PDF
  • Extrai texto, tabelas, imagens
  • Gera resumos com IA
  • Adiciona ao knowledge base unificado
  • Salva metadados (source, type)

consultar.py:
  • Modo terminal: Chat interativo
  • Modo API: API REST para n8n
  • Busca em TODOS os PDFs
  • Mostra fontes
  • Responde perguntas

═══════════════════════════════════════════════════════════════════════════
    ✅ PROJETO LIMPO E PROFISSIONAL!
═══════════════════════════════════════════════════════════════════════════

De 26 arquivos → 5 arquivos essenciais (80% redução!)
De 11 scripts → 2 scripts principais (82% redução!)
De 15 docs → 1 README simples

Tudo que você precisa em 2 scripts! 🎉

═══════════════════════════════════════════════════════════════════════════

